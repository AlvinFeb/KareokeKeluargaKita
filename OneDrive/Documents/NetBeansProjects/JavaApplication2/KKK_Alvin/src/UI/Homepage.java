/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import DAO.RoomDAO;
import model.Room;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.awt.*;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author ACER
 */
public class Homepage extends javax.swing.JFrame {
    private RoomDAO roomDAO;
    private DefaultTableModel tableModel;
    /**
     * Creates new form Homepage
     */
    public Homepage() {
        initComponents();
        setLocationRelativeTo(null);
        try {
            roomDAO = new RoomDAO();
            initializeTable();
            loadRoomsData();
            setupTableListener();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                "Failed to initialize database connection: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
    }
    
    @Override
    public void dispose() {
        if (roomDAO != null) {
            roomDAO.close();
        }
        super.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    private void initializeTable() {
        tableModel = new DefaultTableModel(
            new Object[][]{},
            new String[]{"Room Name", "Type", "Capacity", "Hourly Rate (USD)", "Book?"}
        ) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 4 ? Boolean.class : Object.class;
            }
            
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 4; // Only the "Book?" column is editable
            }
        };
        TableContents.setModel(tableModel);
    }

    private void loadRoomsData() {
        tableModel.setRowCount(0); // Clear existing data
        
        List<Room> rooms = roomDAO.getAllAvailableRooms(); // Need to implement this in RoomDAO
        for (Room room : rooms) {
            tableModel.addRow(new Object[]{
                room.getName(),
                room.gettype(),
                room.getCapacity(),
                room.getHourlyRate(),
                false // Default to not booked
            });
        }
    }

    private void searchRooms() {
        String type = (String) TypeComboBox.getSelectedItem();
        int minCapacity = (int) CapacitySpinner.getValue();
        double maxPrice = (double) PriceSpinner.getValue();
        
        tableModel.setRowCount(0); // Clear existing data
        
        List<Room> rooms = roomDAO.searchRooms(type, minCapacity, maxPrice);
        for (Room room : rooms) {
            tableModel.addRow(new Object[]{
                room.getName(),
                room.gettype(),
                room.getCapacity(),
                room.getHourlyRate(),
                false
            });
        }
    }

    private void bookRoom(int rowIndex) {
        String roomName = (String) tableModel.getValueAt(rowIndex, 0);
        
        // Show time selection dialog
        JSpinner timeSpinner = new JSpinner(new SpinnerNumberModel(1, 1, 24, 1));
        JPanel panel = new JPanel(new GridLayout(0, 1));
        panel.add(new JLabel("Select booking duration (hours):"));
        panel.add(timeSpinner);
        
        int result = JOptionPane.showConfirmDialog(
            this, 
            panel, 
            "Book Room: " + roomName, 
            JOptionPane.OK_CANCEL_OPTION, 
            JOptionPane.PLAIN_MESSAGE
        );
        
        if (result == JOptionPane.OK_OPTION) {
            int hours = (int) timeSpinner.getValue();
            LocalDate tomorrow = LocalDate.now().plusDays(1);
            String bookingDate = tomorrow.format(DateTimeFormatter.ISO_LOCAL_DATE);
            
            if (roomDAO.bookRoom(roomName, bookingDate, hours)) {
                JOptionPane.showMessageDialog(this, 
                    "Room " + roomName + " booked successfully for " + hours + " hours on " + bookingDate,
                    "Booking Confirmation",
                    JOptionPane.INFORMATION_MESSAGE);
                loadRoomsData(); // Refresh the table
            } else {
                JOptionPane.showMessageDialog(this,
                    "Failed to book room",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    // Add this method to handle table cell changes (for the Book? checkbox)
    private void setupTableListener() {
        TableContents.getModel().addTableModelListener(e -> {
            if (e.getColumn() == 4) { // Book? column
                boolean isBooked = (boolean) tableModel.getValueAt(e.getFirstRow(), 4);
                if (isBooked) {
                    bookRoom(e.getFirstRow());
                    tableModel.setValueAt(false, e.getFirstRow(), 4); // Reset checkbox
                }
            }
        });
    }
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TittlePanel = new javax.swing.JPanel();
        Title1 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        LogoutText = new javax.swing.JLabel();
        SearchFitersText = new javax.swing.JLabel();
        TypeComboBox = new javax.swing.JComboBox<>();
        CapacitySpinner = new javax.swing.JSpinner();
        TypeText = new javax.swing.JLabel();
        CapacityText = new javax.swing.JLabel();
        PriceText = new javax.swing.JLabel();
        PriceSpinner = new javax.swing.JSpinner();
        SearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableContents = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TittlePanel.setBackground(new java.awt.Color(242, 192, 120));
        TittlePanel.setForeground(new java.awt.Color(250, 237, 202));

        Title1.setBackground(new java.awt.Color(254, 93, 38));
        Title1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        Title1.setForeground(new java.awt.Color(254, 93, 38));
        Title1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title1.setText("KKK");

        javax.swing.GroupLayout TittlePanelLayout = new javax.swing.GroupLayout(TittlePanel);
        TittlePanel.setLayout(TittlePanelLayout);
        TittlePanelLayout.setHorizontalGroup(
            TittlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TittlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TittlePanelLayout.setVerticalGroup(
            TittlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TittlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainPanel.setBackground(new java.awt.Color(250, 237, 202));

        LogoutText.setText("Log Out");
        LogoutText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutTextMouseClicked(evt);
            }
        });

        SearchFitersText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SearchFitersText.setText("Search Filters:");

        TypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Small", "Medium", "Large" }));
        TypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeComboBoxActionPerformed(evt);
            }
        });

        TypeText.setText("Type");

        CapacityText.setText("Capacity (Minimum)");

        PriceText.setText("Price (Maximum)");

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        TableContents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Room Name", "Type", "Capacity", "Hourly Rate (USD)", "Book?"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableContents);

        javax.swing.GroupLayout MainPanelLayout = new javax.swing.GroupLayout(MainPanel);
        MainPanel.setLayout(MainPanelLayout);
        MainPanelLayout.setHorizontalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(LogoutText))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(SearchFitersText)
                        .addGap(27, 27, 27)
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SearchButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addComponent(TypeText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(CapacityText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CapacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(PriceText)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        MainPanelLayout.setVerticalGroup(
            MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainPanelLayout.createSequentialGroup()
                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LogoutText)
                            .addGroup(MainPanelLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(MainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TypeText)
                                    .addComponent(TypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CapacityText)
                                    .addComponent(CapacitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(PriceText)
                                    .addComponent(PriceSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(MainPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(SearchFitersText, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TittlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(TittlePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeComboBoxActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        searchRooms();
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void LogoutTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutTextMouseClicked
        this.dispose();
        new Login().setVisible(true);
    }//GEN-LAST:event_LogoutTextMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Homepage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Homepage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner CapacitySpinner;
    private javax.swing.JLabel CapacityText;
    private javax.swing.JLabel LogoutText;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JSpinner PriceSpinner;
    private javax.swing.JLabel PriceText;
    private javax.swing.JButton SearchButton;
    private javax.swing.JLabel SearchFitersText;
    private javax.swing.JTable TableContents;
    private javax.swing.JLabel Title1;
    private javax.swing.JPanel TittlePanel;
    private javax.swing.JComboBox<String> TypeComboBox;
    private javax.swing.JLabel TypeText;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
